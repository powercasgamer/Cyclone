[versions]
jedis = "4.1.1"
gson = "2.9.0"
shadow = "7.1.2"
licenser = "0.6.1"
indra = "2.1.1"
annotations = "23.0.0"
gitproperties = "2.4.0"
adventure = "4.10.0-SNAPSHOT"
okhttp = "5.0.0-SNAPSHOT"
guava = "31.0.1-jre"
mongo = "4.5.0"
caffeine = "2.9.3"
lang3 = "3.12.0"
text = "1.9"
reflections = "0.10.2"
password4j = "1.5.4"
pyrite = "1.3"
javaregex = "1.8"
totp = "1.7.1"
luckperms = "5.4"
homoglyph = "1.1.6"
minidns = "1.0.2"
simplixstorage = "3.2.4"
log4j = "2.17.1"
adventure-platform = "4.0.1"
blossom = "1.3.0"
lombok = "1.18.22"
jda = "5.0.0-alpha.5"
velocity = "3.1.1"
waterfall = "1.18-R0.1-SNAPSHOT"
cardboardbox = "0.2.2"
authlib = "1.5.25"
packetevents = "v1.8-pre-19"
placeholderapi = "2.11.2-DEV-148"
xseries = "8.6.1"
disruptor = "3.4.4"
slimjarGradle = "1.3.0"
slimjarPlugin = "1.2.6"
configurate = "4.1.2"
tca = "1.3.0"
jansi = "3.20.0"
chewtils = "1.24.1"
javadoc = "6.4.1"
cloud = "1.6.1"

[libraries]
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
annotations = { module = "org.jetbrains:annotations", version.ref = "annotations" }
# adventure
adventure-api = { module = "net.kyori:adventure-api", version.ref = "adventure" }
adventure-gson = { module = "net.kyori:adventure-text-serializer-gson", version.ref = "adventure" }
adventure-legacy = { module = "net.kyori:adventure-text-serializer-legacy", version.ref = "adventure" }
adventure-plain = { module = "net.kyori:adventure-text-serializer-plain", version.ref = "adventure" }
adventure-key = { module = "net.kyori:adventure-key", version.ref = "adventure" }
adventure-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure" }
adventure-platform-bukkit = { module = "net.kyori:adventure-platform-bukkit", version.ref = "adventure.platform" }
adventure-platform-bungeecord = { module = "net.kyori:adventure-platform-bungeecord", version.ref = "adventure.platform" }
# okhttp
okhttp-urlconnection = { module = "com.squareup.okhttp3:okhttp-urlconnection", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-brotli = { module = "com.squareup.okhttp3:okhttp-brotli", version.ref = "okhttp" }
okhttp-tls = { module = "com.squareup.okhttp3:okhttp-tls", version.ref = "okhttp" }
okhttp-dnsoverhttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
# mongo
mongo = { module = "org.mongodb:mongodb-driver-sync", version.ref = "mongo" }
bson = { module = "org.mongodb:bson", version.ref = "mongo" }
# apache
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "lang3" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "text" }
# configurate
configurate-core = { module = "org.spongepowered:configurate-core", version.ref = "configurate" }
configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }
# other
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
password4j = { module = "com.password4j:password4j", version.ref = "password4j" }
minidns = { module = "org.minidns:minidns-hla", version.ref = "minidns" }
pyrite = { module = "net.deltapvp:pyrite", version.ref = "pyrite" }
simplixstorage = { module = "com.github.simplix-softworks:simplixstorage", version.ref = "simplixstorage" }
javaregex = { module = "ru.lanwen.verbalregex:java-verbal-expressions", version.ref = "javaregex" }
totp = { module = "dev.samstevens.totp:totp", version.ref = "totp" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
luckperms = { module = "net.luckperms:api", version.ref = "luckperms" }
homoglyph = { module = "ninja.egg82:homoglyph", version.ref = "homoglyph" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
jda = { module = "net.dv8tion:JDA", version.ref = "jda" }
chewtils = { module = "pw.chew:jda-chewtils", version.ref = "chewtils" }
cardboardbox = { module = "org.kitteh:cardboardbox", version.ref = "cardboardbox" }
authlib = { module = "com.mojang:authlib", version.ref = "authlib" }
packetevents = { module = "com.github.retrooper:packetevents", version.ref = "packetevents" }
placeholderapi = { module = "me.clip:placeholderapi", version.ref = "placeholderapi" }
xseries = { module = "com.github.cryptomorin:XSeries", version.ref = "xseries" }
# log4j
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-jpl = { module = "org.apache.logging.log4j:log4j-jpl", version.ref = "log4j" }
log4j-jul = { module = "org.apache.logging.log4j:log4j-jul", version.ref = "log4j" }
log4j-iostreams = { module = "org.apache.logging.log4j:log4j-iostreams", version.ref = "log4j" }
log4j-jpa = { module = "org.apache.logging.log4j:log4j-jpa", version.ref = "log4j" }
log4j-slf4jimpl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
disruptor = { module = "com.lmax:disruptor", version.ref = "disruptor" }
# console
tca = { module = "net.minecrell:terminalconsoleappender", version.ref = "tca" }
jansi = { module = "org.jline:jline-terminal-jansi", version.ref = "jansi" }
# minecraft
velocity = { module = "com.velocitypowered:velocity-api", version.ref = "velocity" }
waterfall = { module = "io.github.waterfallmc:waterfall-api", version.ref = "waterfall" }

[plugins]
indra = { id = "net.kyori.indra", version.ref = "indra" }
indra-git = { id = "net.kyori.indra.git", version.ref = "indra" }
indra-publishing = { id = "net.kyori.indra.publishing", version.ref = "indra" }
indra-crossdoc = { id = "net.kyori.indra.crossdoc", version.ref = "indra" }
blossom = { id = "net.kyori.blossom", version.ref = "blossom" }
licenser = { id = "org.cadixdev.licenser", version.ref = "licenser" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
gitproperties = { id = "com.gorylenko.gradle-git-properties", version.ref = "gitproperties" }
slimjar = { id = "io.github.slimjar", version.ref = "slimjarGradle" }
javadoc = { id = "io.freefair.aggregate-javadoc", version.ref = "javadoc" }
jacoco-report = { id = "io.freefair.aggregate-jacoco-report", version.ref = "javadoc" }

[bundles]
adventure = ["adventure-api", "adventure-key", "adventure-gson", "adventure-legacy", "adventure-plain", "adventure-minimessage"]
okhttp = ["okhttp", "okhttp-dnsoverhttps", "okhttp-tls", "okhttp-brotli", "okhttp-logging-interceptor", "okhttp-urlconnection"]
mongo = ["mongo", "bson"]
log4j = ["log4j-core", "log4j-api", "log4j-jpl", "log4j-jpa", "log4j-iostreams", "log4j-jul"]
console = ["tca", "jansi", "disruptor"]